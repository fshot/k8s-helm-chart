---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  descriptor:
    type: DivvyCloud
    description: |-
    
      DivvyCloud is a compliance and security reporting and enforcement engine for cloud and container infrastructure

      # Pricing
      DivvyCloud Enterprise is free to deploy to your Kubernetes cluster, but requires you to purchase a license from DivvyCloud directly.

      # Support
      DivvyCloud provides enterprise grade support to our customers which includes:
      
      24x7 Support. DivvyCloud provides telephone support, online documentation, and an email/web-based solution for submitting support tickets.

      Dedicated Technical Account Manager. DivvyCloud provides a dedicated Technical Account Manager (TAM).  The TAMâ€™s goal is to deliver a great experience and maximize your return on investment.  

      Additional support is available via our [Support Documentation ](http://docs.divvycloud.com/latest/installation.html)

    maintainers:
    - name: DivvyCloud
      url: http://www.divvycloud.com
    links:
    - description: Getting Started
      url: https://github.com/DivvyCloud/DivvyCloud-k8s-marketplace
    notes: |-
      # Access the DivvyCloud service

      To access DivvyCloud use kubectl port-forward:

      ```
      kubectl port-forward svc {{ template "divvycloud.name" . }}-interfaceserver 8001
      ```

      You can now connect to DivvyCloud by going to http://localhost:8001

      # Setting up admin user
      Once the software is deployed please goto the above ip address in a browser and configure
      your admin account

      # Exposing the DivvyCloud service 
      If you would like to access DivvyCloud without having to use the kubectl port-forward command
      you can associate a public IP address by creating a new service type:

      ```
      kubectl expose svc {{ template "divvycloud.name" . }}-interfaceserver \
       --name={{ template "divvycloud.name" . }}-load-balancer \
       --port=80 --target-port=8001 --type=LoadBalancer
      ```


  info:
  - name: MySQL root password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: MYSQL_ROOT_PASSWORD
        name: {{ template "divvycloud.name" . }}-secret
  - name: DivvyCloud MySQL user name
    type: Reference
    valueFrom:
      secretKeyRef:
        key: MYSQL_USER
        name: {{ template "divvycloud.name" . }}-secret 
  - name: DivvyCloud MySQL password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: MYSQL_PASSWORD
        name: {{ template "divvycloud.name" . }}-secret 

  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
  componentKinds:
  - group: apps/v1beta2
    kind: Deployment
  - group: batch/v1
    kind: Job
  - group: v1
    kind: Secret
  - group: v1
    kind: Service
